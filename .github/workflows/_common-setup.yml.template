# Common GitHub Actions workflow configuration template
# This file contains reusable workflow components for mypylogger v0.2.0
# 
# Key Features:
# - UV package manager integration
# - Dependency caching strategy
# - Python version matrix support
# - Consistent environment setup
#
# Usage: Reference these patterns in actual workflow files

# Common environment variables for all workflows
env:
  UV_CACHE_DIR: ~/.cache/uv
  PYTHON_VERSION_MATRIX: "3.8,3.9,3.10,3.11,3.12"
  COVERAGE_THRESHOLD: "95"

# Common job configuration template
jobs:
  template-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Step 2: Set up Python with caching
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # Step 3: Install UV package manager
      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
      # Step 4: Add UV to PATH
      - name: Add UV to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      # Step 5: Cache UV dependencies
      - name: Cache UV dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-
            uv-${{ runner.os }}-
      
      # Step 6: Install project dependencies
      - name: Install dependencies
        run: uv sync
      
      # Common quality check commands (reference for actual workflows)
      # - name: Run tests with coverage
      #   run: uv run pytest --cov=mypylogger --cov-fail-under=95
      # 
      # - name: Run linting
      #   run: uv run ruff check .
      # 
      # - name: Check formatting
      #   run: uv run ruff format --check .
      # 
      # - name: Run type checking
      #   run: uv run mypy src/

# Common caching patterns for different workflow types

# Pattern 1: UV dependency cache (most important)
cache-uv-dependencies: &cache-uv
  uses: actions/cache@v4
  with:
    path: ~/.cache/uv
    key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
    restore-keys: uv-${{ runner.os }}-

# Pattern 2: Python setup with version matrix
python-setup-matrix: &python-matrix
  uses: actions/setup-python@v5
  with:
    python-version: ${{ matrix.python-version }}

# Pattern 3: UV installation
uv-install: &uv-install
  name: Install UV
  run: |
    curl -LsSf https://astral.sh/uv/install.sh | sh
    echo "$HOME/.cargo/bin" >> $GITHUB_PATH

# Pattern 4: Dependency installation
dependency-install: &deps-install
  name: Install dependencies
  run: uv sync

# Pattern 5: Quality check timeout and retry configuration
quality-check-config: &quality-config
  timeout-minutes: 10
  continue-on-error: false

# Pattern 6: Fail-fast strategy for matrix builds
fail-fast-config: &fail-fast
  strategy:
    fail-fast: true
    matrix:
      python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]